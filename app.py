import streamlit as st
import pandas as pd
import plotly.express as px
from wordcloud import WordCloud
import matplotlib.pyplot as plt

# Configuraci√≥n de la p√°gina
st.set_page_config(page_title="Dashboard de Productos", layout="wide")

# Cargar datos
df = pd.read_csv("amazon.csv")

# T√≠tulo
st.title("üìä Dashboard de Visualizaci√≥n de Productos y Rese√±as")

# Filtro por categor√≠a
categorias = df["category"].dropna().unique()
categoria_seleccionada = st.sidebar.multiselect("Seleccionar categor√≠a:", categorias, default=categorias)
df_filtrado = df[df["category"].isin(categoria_seleccionada)]

# 1. Precio real vs Precio con descuento
st.subheader("1Ô∏è‚É£ Comparaci√≥n de Precio Real vs. Precio con Descuento")
fig1 = px.box(df_filtrado, x="category", y="actual_price", points="all", title="Precio Real por Categor√≠a")
st.plotly_chart(fig1, use_container_width=True)

fig2 = px.box(df_filtrado, x="category", y="discounted_price", points="all", title="Precio con Descuento por Categor√≠a")
st.plotly_chart(fig2, use_container_width=True)

# 2. Porcentaje de descuento por categor√≠a
st.subheader("2Ô∏è‚É£ Porcentaje de Descuento por Categor√≠a")
fig3 = px.bar(df_filtrado.groupby("category")["discount_percentage"].mean().reset_index(),
              x="category", y="discount_percentage", title="Promedio de Descuento (%)")
st.plotly_chart(fig3, use_container_width=True)

# 3. Promedio de rating por categor√≠a
st.subheader("3Ô∏è‚É£ Rating Promedio por Categor√≠a")
fig4 = px.bar(df_filtrado.groupby("category")["rating"].mean().reset_index(),
              x="category", y="rating", title="Calificaci√≥n Promedio")
st.plotly_chart(fig4, use_container_width=True)

# 4. Distribuci√≥n de calificaciones
st.subheader("4Ô∏è‚É£ Distribuci√≥n de Calificaciones")
fig5 = px.histogram(df_filtrado, x="rating", nbins=20, title="Histograma de Calificaciones")
st.plotly_chart(fig5, use_container_width=True)

# 5. N√∫mero de rese√±as por producto
st.subheader("5Ô∏è‚É£ Top Productos con M√°s Rese√±as")
top_reviews = df_filtrado["product_name"].value_counts().nlargest(10).reset_index()
top_reviews.columns = ["product_name", "review_count"]
fig6 = px.bar(top_reviews, x="product_name", y="review_count", title="Top 10 Productos con M√°s Rese√±as")
st.plotly_chart(fig6, use_container_width=True)

# 6. Usuarios m√°s activos (por rese√±as)
st.subheader("6Ô∏è‚É£ Usuarios M√°s Activos (rese√±as)")
top_users = df_filtrado["user_name"].value_counts().nlargest(10).reset_index()
top_users.columns = ["user_name", "review_count"]
fig7 = px.bar(top_users, x="user_name", y="review_count", title="Top 10 Usuarios M√°s Activos")
st.plotly_chart(fig7, use_container_width=True)

# 7. Productos mejor calificados (m√≠nimo 5 rese√±as)
st.subheader("7Ô∏è‚É£ Productos Mejor Calificados")
min_reviews = df_filtrado.groupby("product_name")["rating_count"].count()
valid_products = min_reviews[min_reviews >= 5].index
top_rated = df_filtrado[df_filtrado["product_name"].isin(valid_products)]
avg_rating = top_rated.groupby("product_name")["rating"].mean().nlargest(10).reset_index()
fig8 = px.bar(avg_rating, x="product_name", y="rating", title="Top 10 Productos Mejor Calificados")
st.plotly_chart(fig8, use_container_width=True)

# 8. Nube de palabras de t√≠tulos de rese√±as
st.subheader("8Ô∏è‚É£ Nube de Palabras de T√≠tulos de Rese√±as")
text = " ".join(str(t) for t in df_filtrado["review_title"].dropna())
wordcloud = WordCloud(width=800, height=400, background_color="white").generate(text)
fig9, ax = plt.subplots(figsize=(10, 5))
ax.imshow(wordcloud, interpolation="bilinear")
ax.axis("off")
st.pyplot(fig9)

# 9. Histograma del n√∫mero de calificaciones
st.subheader("9Ô∏è‚É£ Histograma del N√∫mero de Calificaciones")
fig10 = px.histogram(df_filtrado, x="rating_count", nbins=30, title="Distribuci√≥n del N√∫mero de Calificaciones")
st.plotly_chart(fig10, use_container_width=True)

# 10. Relaci√≥n entre rating y descuento
st.subheader("üîü Relaci√≥n entre Calificaci√≥n y Descuento")
fig11 = px.scatter(df_filtrado, x="discount_percentage", y="rating",
                   size="rating_count", color="category",
                   title="Rating vs. Porcentaje de Descuento")
st.plotly_chart(fig11, use_container_width=True)
